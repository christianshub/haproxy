.
├── files
│   └── haproxy.cfg
├── inventory.ini
└── playbooks
    └── haproxy.yaml

2 directories, 3 files

--- ./inventory.ini ---
[haproxy]
192.168.0.100 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_ed25519

--- ./playbooks/haproxy.yaml ---
---
- name: Set up HAProxy load balancer
  hosts: haproxy
  become: yes

  tasks:
    - name: Ensure apt cache is updated
      apt:
        update_cache: yes

    - name: Install HAProxy
      apt:
        name: haproxy
        state: present

    - name: Upload HAProxy configuration
      copy:
        src: ../files/haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg
        owner: root
        group: root
        mode: "0644"
      notify: Restart HAProxy

    - name: Enable and start HAProxy
      systemd:
        name: haproxy
        enabled: yes
        state: started

  handlers:
    - name: Restart HAProxy
      systemd:
        name: haproxy
        state: restarted

--- ./files/haproxy.cfg ---
# Global settings
global
    log 127.0.0.1 local0
    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    maxconn 4000
    user haproxy
    group haproxy
    daemon
    stats socket /var/lib/haproxy/stats
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

# Defaults
defaults
    log global
    timeout client 300s
    timeout server 300s
    timeout connect 5s
    timeout http-keep-alive 10s
    timeout check 10s

# Kubernetes API server
frontend apiserver-frontend
    bind *:6443
    mode tcp
    default_backend apiserver-backend

backend apiserver-backend
    mode tcp
    balance roundrobin
    server server-1 172.21.39.134:6443 check

# Ingress
frontend ingress-redirect-frontend
    bind *:80
    mode http
    redirect scheme https if !{ ssl_fc }

frontend ingress-frontend
    bind *:443
    mode tcp
    default_backend ingress-backend

backend ingress-backend
    mode tcp
    balance roundrobin
    server server-1 172.21.39.134:32107 check
